{"version":3,"file":"static/js/main.507bce99.js","mappings":"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","sources":["../webpack/runtime/chunk loaded","../webpack/runtime/create fake namespace object","../webpack/runtime/load script","reportWebVitals.js","compoment/IFrame.js","utils/myAxios.js","api/api.js","utils/ss_device_utils.js","hook/useGetCampaginConfig.js","Main.js","model/AdsContent.js","utils/cache.js","utils/IdbHelper.js","hook/useGetAdsBuffered.js","MainBuffered.js","index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"react_base:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const IFrame = (props) => {\n    return <iframe\n        title=\"advertisement\"\n        src={props.url}\n        onLoad={props.onLoad}\n        style={{\n                overflow: 'hidden',\n                height: '100vh',\n                width: \"100%\",\n                broder: \"none\",\n                // zIndex: 102,\n                // backgroundColor: \"white\",\n            }} >\n            < /iframe>\n        }\n\n        export default IFrame;\n","import axios from 'axios'\n\nconst instance = axios.create({ // eslint-disable-line no-unused-vars\n    headers: {'Content-Type': 'application/json',}\n});\n\ninstance.interceptors.request.use(function (config) {\n    // const token = localStorage.getItem('token');\n    // if (token) {\n    //     config.headers['X-Access-Token'] = token;\n    // }\n    return config;\n});\n\n\nexport default instance\n","import myAxios from \"../utils/myAxios\";\n\n// uat.hivestack.com\n// apps.hivestack.com\n\nexport const getHiveStackAds = async () => {\n    const response = await myAxios.get(\"https://uat.hivestack.com/nirvana/api/v1/units/schedulevast/TESTSCREEN_Street_smart_2\", {\n        headers: {\n            Accept: 'application/xml',\n            'hs-auth': 'apikey $2b$12$y4OZHQji3orEPdy2FtQJye:8f3bc93a-3b31-4323-b1a0-fd20584d9de4',\n        }\n    })\n    return response;\n}\n\n// export const getAds = async (screen_id) => {\n//     const response = await myAxios.get(`${process.env.REACT_APP_API_URL}/v1/api/hive/content/${screen_id}`)\n//     return response;\n// }\n\nexport const getAds = async (screen_id, slug, remain_duration, id) => {\n    const url = `${process.env.REACT_APP_API_URL}/v1/api/hive/content/?slug=${slug}&screenid=${screen_id}&remain_duration=${remain_duration}&id=${id}`;\n    const response = await myAxios.get(url)\n    return response;\n}\n\n// export const getAds = async (screen_id, slug, remain_duration) => {\n//     const response = await myAxios.get(`${process.env.REACT_APP_API_URL}/v1/api/hive/getcontent`)\n//     return response;\n// }\n\nexport const postError = async (error) => {\n    const response = await myAxios.post(`${process.env.REACT_APP_API_URL}/v1/api/hive/errortracking/`, {\n        data: JSON.stringify(error)\n    });\n    return response;\n}\n\nexport const getProgrammaticAdsByToken = async (token) => {\n    const response = await myAxios.get(`${process.env.REACT_APP_API_URL}/v1/api/programmaticads/${token}`);\n    return response;\n}\n\nexport const reportStart = async (screen_id, supplier, slug) => {\n    console.log('reportStart')\n    // let url = new URL(`${process.env.REACT_APP_API_URL}/v1/api/hive/trackingstart/`),\n    //     params = {'ss_uuid': screen_id, 'supplier': supplier}\n    // Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n    // try {\n    //     await fetch(url);\n    // } catch (e) {\n    //     console.log(e);\n    // }\n    try {\n        const url = `${process.env.REACT_APP_REPORT_URL}/v1/api/hive/trackingstart/?ss_uuid=${screen_id}&supplier=${supplier}&slug=${slug}`\n        const response = await myAxios.get(url)\n        return response;\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nexport const reportSuccess = async (screen_id, supplier, slug, type) => {\n    console.log('reportSuccess')\n    // let url = new URL(`${process.env.REACT_APP_API_URL}/v1/api/hive/trackingsuccess/`),\n    //     params = {'ss_uuid': screen_id, 'supplier': supplier, 'type': type}\n    // Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n    // try {\n    //     await fetch(url);\n    // } catch (e) {\n    //     console.log(e);\n    // }\n    try {\n        const url = `${process.env.REACT_APP_REPORT_URL}/v1/api/hive/trackingsuccess/?ss_uuid=${screen_id}&supplier=${supplier}&slug=${slug}&type=${type}`\n        const response = await myAxios.get(url)\n        return response;\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nexport const reportFail = async (screen_id, supplier, slug, type) => {\n    console.log('reportFail')\n    // let url = new URL(`${process.env.REACT_APP_API_URL}/v1/api/hive/trackingstop/`),\n    //     params = {'ss_uuid': screen_id, 'supplier': supplier, 'type': type}\n    // Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n    // try {\n    //     await fetch(url);\n    // } catch (e) {\n    //     console.log(e);\n    // }\n    try {\n        const url = `${process.env.REACT_APP_REPORT_URL}/v1/api/hive/trackingstop/?ss_uuid=${screen_id}&supplier=${supplier}&slug=${slug}&type=${type}`\n        const response = await myAxios.get(url)\n        return response;\n    }catch (e) {\n        console.log(e);\n    }\n}\n\n// export const getTmsToken = async (screenid) => {\n//     const url = `${process.env.REACT_APP_API_URL}/v1/api/tmsauthtoken/`;\n//     const response = await myAxios.post(url, {screenid})\n//     return response;\n// }\n\nexport const getTmsToken = async (screenid) => {\n    const url = `${process.env.REACT_APP_API_URL}/v1/api/tmsauthtoken/?screenid=${screenid}`;\n    const response = await myAxios.get(url, {screenid})\n    return response;\n}\n\n// export const sendKillPlayListReq = async (screenid, slug, password, reborn) => {\n//     const url = `${process.env.REACT_APP_API_URL}/v1/api/tmssuicide/`;\n//     const response = await myAxios.post(url, {screenid, slug, password, reborn})\n//     return response;\n// }\n\nexport const sendKillPlayListReq = async (screenid, slug, password, reborn) => {\n    const url = `${process.env.REACT_APP_API_URL}/v1/api/tmssuicide/?screenid=${screenid}&slug=${slug}&alfredishandsome=${randomStr(200)}&password=${password}&reborn=${reborn}`;\n    const response = await myAxios.get(url)\n    return response;\n}\n\n/**\n * check playlist still valid or not for reborn playlist use\n * @param screenid\n * @param slug\n * @returns {Promise<AxiosResponse<any>>}\n */\n// export const sendTmsCheck = async (screenid, slug) => {\n//     const url = `${process.env.REACT_APP_API_URL}/v1/api/tmscheck/`;\n//     const response = await myAxios.post(url, {screenid, slug})\n//     return response;\n// }\nexport const sendTmsCheck = async (screenid, slug) => {\n    const url = `${process.env.REACT_APP_API_URL}/v1/api/tmscheck/?slug=${slug}&screenid=${screenid}`;\n    const response = await myAxios.get(url)\n    return response;\n}\n\nconst randomStr = (length) => {\n    let result = '';\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nexport const fakeAds = async ()=>{\n    const response = await myAxios.get('http://eric0810ft.asuscomm.com:4024/api/v1/hive')\n    return response;\n}\n","export const getDeviceId = () => {\n    const mode = process.env.REACT_APP_MODE;\n    if (mode === \"staging\") {\n        return 'TESTSCREEN_Street_smart_2';\n    }\n\n    let clientInfo;\n    try {\n        clientInfo = window.client.getClientInfo();\n        if (typeof clientInfo === \"string\") {\n            clientInfo = JSON.parse(clientInfo);\n        }\n    } catch (e) {\n        console.log(e);\n    }\n    // hack for production\n    if (clientInfo?.sn === '73A40551' && mode !== \"staging\") {\n        return 'Test_Office_Screen_1';\n    }\n    return`${clientInfo?.sn}F` ;\n}\n\nexport const skipPlayBack = () => {\n    console.log('skipPlayBack()')\n    // try {\n    //     window.android.callAndroid('some data to pass but nobody care what is passing here');\n    // } catch (e) {\n    //     console.error(e);\n    // }\n}\n\nexport const sleepSync = (seconds) => {\n    let e = new Date().getTime() + (seconds * 1000);\n    while (new Date().getTime() <= e) {\n    }\n}\n","import {useEffect, useState} from \"react\";\nimport myAxios from \"../utils/myAxios\";\nimport {getProgrammaticAdsByToken} from \"../api/api\";\n//\n// function get_url_extension(url) {\n//     return url.split(/[#?]/)[0].split('.').pop().trim();\n// }\n\nconst useGetCampaignConfig = (token) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [initialImageUrl, setInitialImageUrl] = useState('/assets/SS_Media_Full_Screen.jpg');\n    const [campaignId, setCampaignId] = useState(null);\n    // const [placeholderUrl, setPlaceholderUrl] = useState(null);\n    // const [placeholderType, setPlaceholderType] = useState();\n    const [duration, setDuration] = useState(120);\n    // const [supplier, setSupplier] = useState();\n\n    const fetchCampaignConfig = async () => {\n        setIsLoading(true)\n        try {\n            const response = await getProgrammaticAdsByToken(token)\n            if (response.status >= 200 && response.status < 400) {\n                const data = response.data.data[0];\n                console.log(data)\n                if(data.initial_image) {\n                    setInitialImageUrl(data.initial_image);\n                }\n                // setPlaceholderUrl(data.placeholder);\n                // setPlaceholderType(get_url_extension(data.placeholder));\n                setDuration(data.duration);\n                setIsLoading(false)\n                // setSupplier(data.supplier);\n                setCampaignId(data.id);\n            }\n        } catch (e) {\n            console.log(e)\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        // if (token) {\n            fetchCampaignConfig()\n        // } else {\n        //     setIsLoading(false)\n        // }\n    }, [])\n\n    return {\n        isLoading,\n        campaignId,\n        initialImageUrl,\n        duration,\n        // supplier,\n        // placeholderType,\n        // placeholderUrl\n    }\n}\n\nexport default useGetCampaignConfig;\n","import {Grid} from \"@mui/material\";\nimport {useEffect, useRef, useState} from \"react\";\nimport IFrame from \"./compoment/IFrame\";\nimport useGetAds from \"./hook/useGetAds\";\nimport queryStr from \"query-string\";\nimport {getDeviceId} from \"./utils/ss_device_utils\";\nimport useGetCampaignConfig from \"./hook/useGetCampaginConfig\";\n\n// const screenID = getDeviceId();\nconst startTimeStamp = new Date().getTime();\n\nconst queryString = window.location.search;\nconst query = queryStr.parse(queryString)\nconsole.log(queryString);\nconst token = query?.token || undefined\nconst screenID = getDeviceId();\n\nconst Main = () => {\n    const config = useGetCampaignConfig(token);\n    console.log(`config.duration =>${config.duration}`);\n\n    const current = Math.ceil((new Date().getTime() - startTimeStamp) / 1000);\n    console.log(`current =>${current}`);\n\n    const [callCount, setCallCount] = useState(0);\n    const {\n        isLoading,\n        adsUrl,\n        adsType,\n        duration,\n        timeStamp,\n        failCount,\n        trackingSuccess,\n        trackingFail\n    } = useGetAds(callCount, screenID, token, config.duration - current);\n\n\n    const [ready, setReady] = useState(false);\n    const [playing, setPlaying] = useState(false);\n    const videoRef = useRef();\n    const imgRef = useRef();\n\n    useEffect(() => {\n        if (adsType && adsType.includes('video') && adsUrl && videoRef.current) {\n            videoRef.current.src = adsUrl;\n        }\n        // if (adsType && adsType.includes('image') && adsUrl && videoRef.current) {\n        //     imgRef.current.src = adsUrl;\n        // }\n    }, [isLoading])\n\n    // useEffect(() => {\n    //     let timer1 = setTimeout(() => {\n    //         console.log('setTimeout from adsUrl')\n    //         if (!adsUrl  && !isLoading) {\n    //             const c = callCount + 1;\n    //             setCallCount(c);\n    //         }\n    //     }, 2000);\n    //\n    //     return () => {\n    //         clearTimeout(timer1);\n    //     };\n    //\n    // }, [adsUrl, adsType])\n\n    useEffect(() => {\n        console.log(`init timer: timeStamp => ${timeStamp}, duration => ${duration}`)\n        if (!duration && duration === 0) {\n            console.log('not init timer');\n            return;\n        }\n        let timer1 = setTimeout(() => {\n            console.log(`update callCount @ duration after : ${duration}`)\n            const c = callCount + 1;\n            setCallCount(c);\n        }, duration);\n\n        return () => {\n            console.log('clearTimeout duration')\n            clearTimeout(timer1);\n        };\n    }, [duration])\n\n    useEffect(() => {\n        let timer1 = setTimeout(() => {\n            console.log(`isLoading =>${isLoading} , failCount => ${failCount}`)\n            if (failCount > 0) {\n                console.log('update callCount @ setTimeout')\n                const c = callCount + 1;\n                setCallCount(c);\n            }\n        }, 2000);\n\n        return () => {\n            console.log('clearTimeout callCount')\n            clearTimeout(timer1);\n        };\n    }, [failCount])\n\n    return <>\n        <Grid container>\n            <img src={config?.initialImageUrl} style={{\n                display: isLoading ? 'block' :\"none\",\n                zIndex: 100, position: 'fixed'\n            }} width='100%' height=\"100%\"/>\n\n\n            {/* ads are images */}\n            {\n                adsType && adsType?.includes('image') ?\n                    <img\n                        ref={imgRef}\n                        src={adsUrl}\n                        style={{\n                            display: adsType?.includes('image') ? 'block' : 'none',\n                            zIndex: 102, position: 'fixed'\n                        }} width='100%' height=\"100%\"/> : <></>\n            }\n\n            {/* ads are html */}\n            {\n                adsType && adsType?.includes('html') ?\n                    <IFrame\n                        style={{\n                            display: adsType.includes('html') ? 'block' : 'none',\n                            zIndex: 100,\n                        }}\n                        url={adsUrl}\n                        onLoad={() => {\n                            console.log('onload')\n                        }}>\n\n                    </IFrame> : <></>\n            }\n\n            <div className=\"video_wrap\" style={{\n                display: adsType?.includes('video') ? 'block' : 'none',\n                // zIndex: 100,\n            }}>\n                <video className=\"blob_video\" ref={videoRef} autoPlay\n                       poster=\"null\"\n                       // muted\n                    // style={{\n                    //     display: adsType?.includes('video') ? 'block' : 'none',\n                    //     // zIndex: 100,\n                    // }}\n                       onPlay={(event) => {\n                           console.log('onPlay')\n                           trackingSuccess();\n                       }}\n                       onPlaying={(event) => {\n                           console.log('onPlaying')\n                           setPlaying(true);\n                       }}\n                       onEnded={(event) => {\n                           console.log('onEnded');\n                       }}\n                       onError={(event) => {\n                           // trackingFail();\n                           if (adsType?.includes('video') && event.target.error) {\n                               trackingFail();\n                           }\n                       }}\n                ></video>\n            </div>\n        </Grid>\n    </>\n};\n\nexport default Main;\n\n","class AdsContent {\n    constructor(adsUrl, adsType, duration, timeStamp, trackSuccess, trackFail, blob, loop, supplierId, hive_creativeid) {\n        this.adsUrl = adsUrl;\n        this.adsType = adsType;\n        this.duration = duration;\n        this.nextReqTime = (duration - (5 * 1000));\n        this.timeStamp = timeStamp;\n        this.trackSuccessUrl = trackSuccess;\n        this.trackFailUrl = trackFail;\n        this.blob = blob;\n        this.loop = loop || false;\n        this.supplierId = supplierId;\n        this.hive_creativeid = hive_creativeid;\n    }\n\n    // releaseBlobUrl() {\n    //     console.log('releaseBlobUrl')\n    //     return (window.URL) ? window.URL.revokeObjectURL(this.adsUrl) : window.webkitURL.revokeObjectURL(this.adsUrl);\n    // }\n}\n\nexport default AdsContent;\n","import cache from 'js-cache';\n\nconst myCache = new cache();\n\nexport default myCache;\n","let db = null;\nconst _dbName = \"ss_video_cache\";\nconst _tableName = \"video_cache\";\nconst _dbVersion = 1;\nlet request = null;\n\nexport const initDb = () => {\n    console.log('initDb');\n    request = window.indexedDB.open(_dbName, _dbVersion);\n    request.onerror = (event) => {\n        console.error(`Database error: ${event.target.errorCode}`);\n    };\n    request.onsuccess = (event) => {\n        db = event.target.result;\n    };\n\n    request.onupgradeneeded = function (event) {\n        console.log('onupgradeneeded')\n        db = event.target.result;\n        let objectStore;\n        if (!db.objectStoreNames.contains(_tableName)) {\n            objectStore = db.createObjectStore(_tableName, {keyPath: 'vid'});\n            objectStore.createIndex('blob', 'blob', {unique: false});\n        }\n    }\n}\n\nexport const saveBlobVideo = (vid, blob) => {\n    if (db) {\n        const objectStore = db.transaction(_tableName, \"readwrite\").objectStore(_tableName)\n        const request = objectStore.add({vid: vid, blob: blob});\n        request.addEventListener('success', () => console.log('Record addition attempt finished'));\n        request.addEventListener('error', () => console.error(request.error));\n    }\n}\n\nexport const getBlobVideo = (vid) => {\n    return new Promise((resolve, reject) => {\n        if (db) {\n            const objectStore = db.transaction(_tableName).objectStore(_tableName);\n            const request = objectStore.get(vid);\n            request.addEventListener('success', () => {\n                // If the result exists in the database (is not undefined)\n                if (request.result) {\n                    console.log('taking videos from IDB');\n                    // return result if record exist\n                    resolve(request.result.blob);\n                } else {\n                    resolve(null);\n                    // return null than fetch the videos from the network\n                }\n            });\n            request.addEventListener('error', () => {\n                console.log('request error');\n                resolve(null);\n            })\n        } else {\n            resolve(null);\n        }\n    });\n}\n","import {useEffect, useState} from \"react\";\nimport axios from \"../utils/myAxios\"\nimport {\n    fakeAds,\n    getAds,\n    getTmsToken,\n    reportFail,\n    reportStart,\n    reportSuccess,\n    sendKillPlayListReq,\n    // sendTmsCheck\n} from \"../api/api\";\nimport AdsContent from \"../model/AdsContent\";\nimport myCache from \"../utils/cache\";\nimport {getBlobVideo, saveBlobVideo} from \"../utils/IdbHelper\";\nimport {skipPlayBack, sleepSync} from \"../utils/ss_device_utils\";\n\nconst cacheKey = \"0\";\nconst houseDomain = process.env.REACT_APP_S3_DOMAIN;\n\nconst useGetAdsBuffered = (call, screenID, token, remainDuration, campaignId, isPlaying) => {\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [failCount, setFailCount] = useState(null);\n    const [currentAds, setCurrentAds] = useState(null);\n    // const [reborn, setReborn] = useState(true);\n    const [error, setError] = useState(null);\n\n    function createObjectURL(object) {\n        console.log('createObjectURL')\n        return (window.URL) ? window.URL.createObjectURL(object) : window.webkitURL.createObjectURL(object);\n    }\n\n    function revokeObjectURL(object) {\n        console.log('revokeObjectURL')\n        return (window.URL) ? window.URL.revokeObjectURL(object) : window.webkitURL.revokeObjectURL(object);\n    }\n\n    useEffect(() => {\n            console.log(`call => ${call}, isPlaying =>${isPlaying}`)\n            /**\n             * fetch advertisement\n             * @returns {Promise<void>}\n             */\n            const fetchAds = async () => {\n                console.log('fetchAds')\n                let playListReborn;\n                try {\n                    // check tms still valid\n                    // const tmsCheckRes = await sendTmsCheck(screenID, token)\n                    // if (tmsCheckRes.status >= 200 && tmsCheckRes.status < 400) {\n                    //     playListReborn = tmsCheckRes.data.data.status;\n                    //     setReborn(playListReborn)\n                    //     if (!playListReborn) {\n                    //         await killPlayListReq(screenID, token, playListReborn);\n                    //         return;\n                    //     }\n                    // }\n                    // get ads\n                    reportStart(screenID, undefined, token);\n                    const response = await getAds(screenID, token, remainDuration, campaignId);\n                    // const response = await fakeAds();\n                    console.log(response.data);\n                    if (response.status >= 200 && response.status < 400) {\n                        const data = response.data;\n                        if (data && Object.keys(data).length === 0\n                            && Object.getPrototypeOf(data) === Object.prototype) {\n                            // fail\n                            console.log('no ads')\n                            // const fc = failCount + 1;\n                            // setFailCount(fc);\n                            if (!isPlaying) {\n                                // await killPlayListReq(screenID, token, playListReborn);\n                                skipPlayBack();\n                            }\n                        } else {\n                            console.log('parse vast success');\n                            /// add random offset to prevent value not change (reactive program value not change not fire event)\n                            const duration = (data.duration * 1000) + Math.floor(Math.random() * 180);\n                            const url = data.text;\n                            const type = data.type;\n                            const timestamp = data.time_stamp;\n                            console.log(`url => ${url}`);\n                            console.log(`type => ${type}`);\n                            const supplier = data.supplier_id;\n                            const impression = data.impression;\n                            const error = data.error;\n                            console.log(`impression => ${impression}`);\n                            console.log(`error => ${error}`);\n                            setFailCount(0);\n                            const hive_creativeid = data.hive_creativeid;\n                            // if (impression) {\n                            let ad;\n                            if (type) {\n                                if (type.includes('html')) {\n                                    // html is non blobs\n                                    // const result = await loadHtml(url, impression);\n                                    // result ? await trackingSuccess(impression) : await trackingFail(error);\n                                    await trackingSuccess(impression, supplier, token, type)\n                                    ad = new AdsContent(url, type, duration, timestamp, impression, error, null, false, supplier, hive_creativeid);\n                                } else if (type.includes('image')) {\n                                    await trackingSuccess(impression, supplier, token, type);\n                                    ad = new AdsContent(url, type, duration, timestamp, impression, error, null, false, supplier, hive_creativeid);\n                                } else {\n                                    console.log(currentAds)\n                                    // const lastCreativeId = currentAds?.hive_creativeid || null;\n                                    // console.log(`lastCreativeId => ${lastCreativeId} , hive_creativeid => ${hive_creativeid}`)\n                                    // if (lastCreativeId == null || lastCreativeId !== hive_creativeid) {\n                                    //     // blob download\n                                    //     console.log('download video asset')\n                                    //     const isHouseVideo = url.startsWith(houseDomain);\n                                    //     const blob = await getBlobUrl(url, type);\n                                    //     if (!blob) {\n                                    //         console.log('blob is null, mark as fail')\n                                    //         await trackingFail(error, supplier, type);\n                                    //         updateFailCount();\n                                    //         return;\n                                    //     }\n                                    //     ad = new AdsContent(url, type, duration, timestamp, impression, error, blob, isHouseVideo, supplier, hive_creativeid);\n                                    // } else {\n                                    //     console.log('hive_creativeid is same skip download video asset')\n                                    //     ad = new AdsContent(url, type, duration, timestamp, impression, error, currentAds.blob, currentAds.loop, supplier, hive_creativeid);\n                                    // }\n                                    const isHouseVideo = url.startsWith(houseDomain);\n                                    let blob = await getBlobVideo(hive_creativeid);\n                                    if (!blob) {\n                                        blob = await getBlobUrl(url, type);\n                                        if (!blob) {\n                                            console.log('blob is null, mark as fail')\n                                            await trackingFail(error, supplier, token, type);\n                                            updateFailCount();\n                                            return;\n                                        }\n                                        saveBlobVideo(hive_creativeid, blob);\n                                    }\n                                    await trackingSuccess(impression, supplier, token, type)\n                                    ad = new AdsContent(url, type, duration, timestamp, impression, error, blob, isHouseVideo, supplier, hive_creativeid);\n                                }\n                                // } else {\n                                //     // cannot detect ads type make this as fail\n                                //     // const fc = failCount + 1;\n                                //     // setFailCount(fc);\n                                //     if (!isPlaying) {\n                                //         await killPlayListReq(screenID, token, playListReborn);\n                                //     }\n                                //     return;\n                                // }\n                                //first time\n                                if (call === 0 || currentAds === null) {\n                                    setIsLoading(false);\n                                    setCurrentAds(ad);\n                                } else {\n                                    addToBuffer(ad);\n                                }\n                            } else {\n                                // no ads\n                                if (!isPlaying) {\n                                    // await killPlayListReq(screenID, token, playListReborn);\n                                    skipPlayBack();\n                                }\n                            }\n                        }\n                    } else {\n                        console.log('api request fail')\n                        setIsLoading(true)\n                        // const fc = failCount + 1;\n                        // setFailCount(fc);\n                        if (!isPlaying) {\n                            // await killPlayListReq(screenID, token, playListReborn);\n                            skipPlayBack();\n                        }\n\n                    }\n                } catch (e) {\n                    setIsLoading(true)\n                    // const fc = failCount + 1;\n                    // setFailCount(fc);\n                    // setError(e);\n                    skipPlayBack();\n                }\n            }\n\n            const getBlobUrl = async (url, adsType) => {\n                try {\n                    console.log(url)\n                    console.log('getBlobUrl')\n                    console.log(`url =>${url} , adsType => ${adsType}`)\n                    const config = {\n                        responseType: 'blob',\n                        // headers: {\"Access-Control-Allow-Origin\": \"*\", 'x-amz-acl': 'public-read'}\n                    };\n                    const response = await axios.get(url, config);\n                    let videoUrl = null;\n                    if (response.status >= 200 && response.status < 400) {\n                        videoUrl = new Blob([response.data]);\n                    }\n                    return videoUrl;\n                } catch (e) {\n                    return null;\n                }\n            };\n\n            /**\n             * check html is it available for show\n             * @param url\n             * @returns {Promise<boolean>}\n             */\n            // const loadHtml = async (url) => {\n            //     try {\n            //         console.log('loadHtml')\n            //         const response = await axios.get(url);\n            //         return response.status >= 200 && response.status < 400\n            //     } catch (e) {\n            //         return false;\n            //     }\n            // }\n\n            /**\n             * add ads to buffer ( cache )\n             * @param ads\n             */\n            const addToBuffer = (ads) => {\n                console.log('addToBuffer()')\n                console.log(ads)\n                myCache.del(cacheKey);\n                myCache.set(cacheKey, ads, 90 * 1000);\n            }\n            if (token && campaignId) {\n                console.log(`token => ${token}, campaignId =>${campaignId}`)\n                fetchAds();\n            }\n\n        }, [call, screenID, token, campaignId]\n    )\n\n    /**\n     * pull next ads already buffered at memory\n     */\n    const pullNextAds = () => {\n        console.log('pullNextAds')\n        const data = myCache.get(cacheKey);\n        console.log(data);\n        if (currentAds && data) {\n            // if (currentAds.trackSuccessUrl === data.trackSuccessUrl) {\n            //     console.log('buffer is old data, mark as fail')\n            //     // data.timeStamp = data.timeStamp + 10;\n            //     updateFailCount();\n            //     setCurrentAds(null)\n            //     setIsLoading(true);\n            // } else {\n            //     console.log('buffer is new, set to current')\n            //     setCurrentAds(data);\n            // }\n            console.log('pull buffer to current')\n            setCurrentAds(data);\n            myCache.del(cacheKey);\n        } else {\n            console.log('buffer is null, mark as fail')\n            updateFailCount();\n            setCurrentAds(null)\n            setIsLoading(true);\n        }\n    }\n\n    const trackingFail = async (errorPostBack, supplier, slug, type) => {\n        console.log('trackingFail')\n        // if (errorPostBack) {\n        //     try {\n        //         console.log(`errorPostBack => ${errorPostBack}`)\n        //         await axios.get(errorPostBack);\n        //     } catch (e) {\n        //         console.log(e)\n        //         setError(e);\n        //     }\n        // }\n        try {\n            await fetch(errorPostBack);\n        } catch (e) {\n            console.log(e)\n            setError(e);\n        }\n\n        try {\n            await reportFail(screenID, supplier, slug, type);\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const trackingSuccess = async (successPostBack, supplier, slug, type) => {\n        console.log('trackingSuccess')\n        // if (successPostBack) {\n        //     try {\n        //         console.log(`successPostBack => ${successPostBack}`)\n        //         await axios.get(successPostBack);\n        //     } catch (e) {\n        //         console.log(e)\n        //         setError(e);\n        //     }\n        // }\n        try {\n            await fetch(successPostBack);\n        } catch (e) {\n            console.log(e)\n            setError(e);\n        }\n\n        try {\n            await reportSuccess(screenID, supplier, slug, type);\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const updateFailCount = () => {\n        const fc = failCount + 1;\n        setFailCount(fc);\n    }\n\n    // const clearAds = () => {\n    //     setCurrentAds(null);\n    // }\n\n    // const killPlayListReq = async (screenID, token, reborn) => {\n    //     console.log('killPlayListReq')\n    //     // console.trace()\n    //     const response = await getTmsToken(screenID);\n    //     if (response.status === 200) {\n    //         const password = response.data.data.password\n    //         console.log(password);\n    //         sendKillPlayListReq(screenID, token, password, reborn)\n    //     }\n    // }\n\n    const skipAds = () => {\n        console.log(\"call skip from ui\")\n        skipPlayBack();\n        sleepSync(2);\n    }\n\n    return {\n        isLoading,\n        currentAds,\n        failCount,\n        pullNextAds,\n        createObjectURL,\n        revokeObjectURL,\n        trackingSuccess,\n        trackingFail,\n        updateFailCount,\n        // killPlayListReq,\n        skipAds,\n        // reborn,\n        error\n    }\n\n}\n\nexport default useGetAdsBuffered;\n","import {CircularProgress, Grid} from \"@mui/material\";\nimport {useEffect, useRef, useState} from \"react\";\nimport queryStr from \"query-string\";\nimport IFrame from \"./compoment/IFrame\";\nimport useGetAdsBuffered from \"./hook/useGetAdsBuffered\";\nimport {getDeviceId} from \"./utils/ss_device_utils\";\nimport useGetCampaignConfig from \"./hook/useGetCampaginConfig\";\n\nconst queryString = window.location.search;\nconst query = queryStr.parse(queryString)\nconsole.log(queryString);\nconst token = query?.token || undefined\nconst screenID = getDeviceId();  // || '73A40551'// || 72820794; 73B78511\n// const screenID = 'Test_Office_Screen_1'\nconst startTimeStamp = new Date().getTime();\n\n\nconst MainBuffered = () => {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [callCount, setCallCount] = useState(0);\n    const [errorCount, setErrorCount] = useState(0);\n    const {cIsLoading, campaignId, initialImageUrl, duration} = useGetCampaignConfig(token);\n    const current = Math.ceil((new Date().getTime() - startTimeStamp) / 1000);\n    console.log(`current =>${current}`);\n    const remainDuration = duration - current;\n\n\n    const {\n        isLoading,\n        currentAds,\n        failCount,\n        pullNextAds,\n        createObjectURL,\n        revokeObjectURL,\n        trackingSuccess,\n        trackingFail,\n        updateFailCount,\n        // killPlayListReq,\n        skipAds,\n        // reborn,\n        error\n    } = useGetAdsBuffered(callCount, screenID, token, remainDuration, campaignId, isPlaying);\n\n    const [blobUrl, setBlobUrl] = useState(null);\n    const videoRef = useRef();\n    const imgRef = useRef();\n\n    console.log(`isPlaying => ${isPlaying}, remainDuration => ${remainDuration}`)\n    if (isPlaying && remainDuration < 10) {\n        // killPlayListReq(screenID, token, reborn);\n        skipAds();\n    }\n\n    // data handler\n    useEffect(() => {\n        if (currentAds && currentAds.adsType && currentAds.adsType.includes('video') && videoRef.current) {\n            if (currentAds.blob) {\n                console.log('set blob to video player')\n                const blobRes = createObjectURL(currentAds.blob);\n                console.log(blobRes)\n                setBlobUrl(blobRes);\n                videoRef.current.src = blobRes;\n            } else {\n                console.log(\"blob is null\");\n                updateFailCount();\n            }\n        }\n\n        setIsPlaying(currentAds != null && currentAds.adsType != null);\n\n    }, [currentAds])\n\n    //pull next ads handler\n    useEffect(() => {\n        console.log(currentAds);\n        if (!currentAds || (!currentAds.nextReqTime && currentAds.nextReqTime === 0)) {\n            console.log('not init timer');\n            return;\n        }\n        console.log(`init timer: timeStamp => ${currentAds?.timeStamp}, duration => ${currentAds?.duration}`)\n\n        let timer1 = setTimeout(() => {\n            console.log(`update callCount @ nextReqTime after : ${currentAds?.nextReqTime} ms`)\n            const c = callCount + 1;\n            setCallCount(c);\n        }, currentAds?.nextReqTime);\n\n        return () => {\n            console.log('clearTimeout nextReqTime')\n            clearTimeout(timer1);\n        };\n    }, [currentAds])\n\n    // request next ads handler\n    useEffect(() => {\n        if (!currentAds || (!currentAds.duration && currentAds.duration === 0)) {\n            console.log('not init timer');\n            if (isPlaying) {\n                // killPlayListReq(screenID, token, reborn);\n                skipAds();\n            }\n            return;\n        }\n\n        let timer1 = setTimeout(() => {\n            pullNextAds();\n            console.log(`pullNextAds from buffer after ${currentAds?.duration} ms`)\n        }, currentAds?.duration);\n\n        return () => {\n            console.log('clearTimeout duration')\n            clearTimeout(timer1);\n        };\n    }, [currentAds])\n\n    // fail retry handler\n    useEffect(() => {\n        let timer1 = setTimeout(() => {\n            console.log(`isLoading =>${isLoading} , failCount => ${failCount}`)\n            // if (isLoading === false && failCount > 0) {\n            if (failCount > 0) {\n                console.log('update callCount by failCount @ setTimeout')\n                const c = callCount + 1;\n                setCallCount(c);\n            }\n        }, 2000);\n\n        return () => {\n            console.log('clearTimeout failCount')\n            clearTimeout(timer1);\n        };\n    }, [failCount])\n\n    // const skipAds = () => {\n    //     console.log('skip add, prepare request next')\n    //     const c = callCount + 1;\n    //     setCallCount(c);\n    // }\n\n    return <>\n        <Grid container>\n            {/*<div style={{*/}\n            {/*    zIndex: 101,*/}\n            {/*    color: \"red\",*/}\n            {/*    right: 10,*/}\n            {/*    top: 10,*/}\n            {/*    backgroundColor: \"white\",*/}\n            {/*    fontWeight: 'w400',*/}\n            {/*    position: 'fixed'*/}\n            {/*}}>*/}\n            {/*    /!*error count : {errorCount}*!/*/}\n            {/*    screenId: {screenID} , error: {`${error?.name}: ${JSON.stringify(error?.toJSON())}`}*/}\n            {/*</div>*/}\n\n            {/*<div style={{*/}\n            {/*    top: 0,*/}\n            {/*    bottom: 0,*/}\n            {/*    left: 0,*/}\n            {/*    right: 0,*/}\n            {/*    display: 'flex',*/}\n            {/*    position: 'fixed',*/}\n            {/*    backgroundColor: '#663399',*/}\n            {/*    color: 'white',*/}\n            {/*    // width: '100%',*/}\n            {/*    // height: '100%',*/}\n            {/*    justifyContent: 'center',*/}\n            {/*    alignItems: 'center',*/}\n            {/*}}>*/}\n            {/*    <CircularProgress color=\"inherit\" size={100}/>*/}\n            {/*</div>*/}\n\n            {\n                initialImageUrl ? <img src={initialImageUrl} style={{\n                    display: isLoading === false ? 'none' : 'block',\n                    zIndex: 100, position: 'fixed'\n                }} width='100%' height=\"100%\"/> : <></>\n            }\n\n\n            {/* ads are images */}\n            {currentAds && currentAds.adsType?.includes('image') ?\n                <img\n                    ref={imgRef}\n                    src={currentAds.adsUrl}\n                    style={{\n                        display: currentAds.adsType?.includes('image') ? 'block' : 'none',\n                        zIndex: 102, position: 'fixed'\n                    }} width='100%' height=\"100%\"/> : <></>\n            }\n\n            {/* ads are html */}\n            {\n                currentAds && currentAds.adsType?.includes('html') ?\n                    <IFrame\n                        style={{\n                            display: currentAds.adsType?.includes('html') ? 'block' : 'none',\n                            // zIndex: 100,\n                        }}\n                        url={currentAds.adsUrl}\n                        onLoad={() => {\n                            console.log('onload')\n                        }}>\n\n                    </IFrame> : <></>\n            }\n\n            <div className=\"video_wrap\" style={{\n                display: currentAds && currentAds.adsType?.includes('video') ? 'block' : 'none',\n                // zIndex: 100,\n            }}>\n                <video className=\"blob_video\" ref={videoRef}\n                       autoPlay\n                       poster=\"null\"\n                       muted\n                       loop={currentAds?.loop || false}\n                       onPlay={(event) => {\n                           console.log('onPlay')\n                           // if (currentAds) {\n                           //     trackingSuccess(currentAds.trackSuccessUrl, currentAds.supplierId, token, currentAds.adsType);\n                           // }\n                       }}\n                       onPlaying={(event) => {\n                           console.log('onPlaying')\n                       }}\n                       onEnded={(event) => {\n                           console.log('onEnded')\n                       }}\n                       onError={(event) => {\n                           console.log(\"can not play\")\n                           console.log(event)\n                           if (currentAds?.adsType?.includes('video') && event.target.error) {\n                               console.log(currentAds);\n                               trackingFail(currentAds.trackFailUrl, currentAds.supplier, currentAds.adsType);\n                               revokeObjectURL(blobUrl)\n                               setBlobUrl(null);\n                               setCallCount(0);\n                               const errorC = errorCount + 1;\n                               setErrorCount(errorC);\n                           }\n                           // postError(event.target.error);\n                           // console.log(`source = ${event.target.src}`);\n                           //\n                           // switch (event.target.error.code) {\n                           //     case event.target.error.MEDIA_ERR_ABORTED:\n                           //         alert('You aborted the video playback.');\n                           //         break;\n                           //     case event.target.error.MEDIA_ERR_NETWORK:\n                           //         alert('A network error caused the video download to fail part-way.');\n                           //         break;\n                           //     case event.target.error.MEDIA_ERR_DECODE:\n                           //         alert('The video playback was aborted due to a corruption problem or because the video used features your browser did not support.');\n                           //         break;\n                           //     case event.target.error.MEDIA_ERR_SRC_NOT_SUPPORTED:\n                           //         alert('The video could not be loaded, either because the server or network failed or because the format is not supported.');\n                           //         break;\n                           //     default:\n                           //         alert('An unknown error occurred.');\n                           //         break;\n                           // }\n                       }}\n                ></video>\n            </div>\n        </Grid>\n    </>\n};\n\nexport default MainBuffered;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {loadFonts} from \"./plugins/webfontloader\";\nimport Main from \"./Main\";\nimport MainBuffered from \"./MainBuffered\";\nimport {initDb} from \"./utils/IdbHelper\";\n\n\n// loadFonts()\ninitDb();\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n  //   <Main />\n    <MainBuffered />\n  // </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + (chunkId === 461 ? \"webfontloader\" : chunkId) + \".\" + {\"461\":\"65c0ceb5\",\"787\":\"080222f6\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_base\"] = self[\"webpackChunkreact_base\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [293,109], function() { return __webpack_require__(6885); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","props","title","src","url","onLoad","style","overflow","height","width","broder","instance","axios","headers","interceptors","request","use","config","getAds","screen_id","slug","remain_duration","id","process","myAxios","response","getProgrammaticAdsByToken","token","reportStart","supplier","reportSuccess","type","reportFail","getDeviceId","clientInfo","window","client","getClientInfo","JSON","parse","e","sn","useState","isLoading","setIsLoading","initialImageUrl","setInitialImageUrl","campaignId","setCampaignId","duration","setDuration","fetchCampaignConfig","status","data","initial_image","useEffect","queryString","Date","getTime","location","search","query","queryStr","AdsContent","adsUrl","adsType","timeStamp","trackSuccess","trackFail","blob","loop","supplierId","hive_creativeid","this","nextReqTime","trackSuccessUrl","trackFailUrl","cache","db","_tableName","saveBlobVideo","vid","transaction","objectStore","add","addEventListener","getBlobVideo","Promise","resolve","reject","get","result","cacheKey","call","screenID","remainDuration","isPlaying","failCount","setFailCount","currentAds","setCurrentAds","error","setError","fetchAds","undefined","Object","keys","length","getPrototypeOf","prototype","Math","floor","random","text","timestamp","time_stamp","supplier_id","impression","includes","trackingSuccess","ad","isHouseVideo","startsWith","getBlobUrl","trackingFail","updateFailCount","addToBuffer","responseType","videoUrl","Blob","ads","myCache","errorPostBack","fetch","successPostBack","pullNextAds","createObjectURL","object","URL","webkitURL","revokeObjectURL","skipAds","seconds","sleepSync","startTimeStamp","setIsPlaying","callCount","setCallCount","errorCount","setErrorCount","useGetCampaignConfig","cIsLoading","ceil","useGetAdsBuffered","blobUrl","setBlobUrl","videoRef","useRef","imgRef","current","blobRes","timer1","setTimeout","clearTimeout","container","display","zIndex","position","ref","className","autoPlay","poster","muted","onPlay","event","onPlaying","onEnded","onError","target","indexedDB","open","onerror","onsuccess","onupgradeneeded","objectStoreNames","contains","createObjectStore","keyPath","createIndex","unique","ReactDOM","document","getElementById","render","reportWebVitals","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","key","splice","r","n","getter","__esModule","d","a","obj","__proto__","t","value","mode","ns","create","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","f","chunkId","all","reduce","promises","u","miniCssF","prop","hasOwnProperty","l","done","push","script","needAttach","scripts","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","onScriptComplete","prev","onload","doneFns","parentNode","removeChild","bind","head","appendChild","Symbol","toStringTag","p","installedChunks","installedChunkData","promise","Error","errorType","realSrc","message","name","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}